<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1252">
<TITLE>Running the sample</TITLE>
<LINK rel="stylesheet" href="../../styles.css" type="text/css"><STYLE></STYLE></HEAD>

<BODY LINK="#0000ff" VLINK="#800080" BGCOLOR="#ffffff">

<H2>Setting up and running the Sample</H2>

<P>This sample does not have any UI. However, it does make ample use of OutputDebugString. Before performing these steps, you may want to run a utility like dbmon.exe or some other utility that displays the output from OutputDebugString. Note, that you can perform steps 1 and 2 at the same time.</P>
<OL>

<LI><A href="create_empty.htm">Create 3 empty COM+ applications QCOrder, QCShip, and QCNotify.</A>
<LI><A href="qapp.htm">Set the "Queued" property for QCShip and QCNotify</A>. This step actually creates the underlying MSMQ queues that 
  provide the queuing services for these Queued Components. 
  
<LI><A href="instcomp.htm">For each COM+ application, install the appropriate queued component.</A>
<LI><A href="setqcomp.htm">Confirm the "Queued" property for the interfaces on the QCShip and QCNotify components.</A>
<LI>Run driver.exe from Services\Queued_Components\QCDemo\. <I><STRONG>Notice that we have not started QCShip or QCNotify!</I></STRONG><LI>driver.exe will terminate when it submits 100 orders. 
  It submits one order per second. Again, you can observe driver.exe submitting 
  orders via a utility like dbmon.exe. Also, using the MSMQ Snap-in, observe the 
  messages landing in the QCShip queue (you may have to press F5 Refresh). 
  
<LI><A href="listen.htm">Start the QCShip application and listener.</A> At 
  this point, the QCShip application will begin processing the ship orders 
  submitted by the client application driver.exe. If you have dbmon.exe (or some 
  other utilty that can display OutputDebugString diagnostics) you will see 
  QCShip process 100 ship orders and execute 100 queued calls to QCNotify. Also, 
  using the MSMQ Snap-in, observe the messages landing in the QCNotify queue 
  (you may have to press F5 Refresh). 
  
<LI>When QCShip completes, <A href="listen.htm">start the QCNotify application and listener</A>. You will see QCNotify start processing the notifications 
  submitted by QCShip. Again it is instructive to see what's going on with 
  dbmon.exe. Also, using the MSMQ Snap-in, observe that all queued messages have 
  been processed. 
  
<LI>You can rerun driver.exe with QCShip and QCNotify 
  both up and running. The application behaves identically if QCShip and 
  QCNotify are available or not. 
  
<LI>You can also run multiple instances of driver.exe.</LI></OL>
</BODY>
</HTML>
