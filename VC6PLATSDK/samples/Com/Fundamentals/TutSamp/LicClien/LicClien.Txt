
LICCLIEN - Client of Licensed DLL Server


SUMMARY
=======

The LICCLIEN sample examines how a client application uses licensed
components provided by a COM server. LICCLIEN works with the COM servers
of two previous samples, LICSERVE and DLLSERVE. It manipulates a set of
components similar to those presented in DLLCLIEN: COCar, COUtilityCar,
COLicCruiseCar, and COUtilityCruiseCar. In this lesson, the COCar and
COUtilityCar components are obtained, as they were in DLLCLIEN, from the
DLLSERVE server. This sample, however, uses a new licensed version of the
COCruiseCar component that was presented in DLLSERVE and DLLCLIEN. This
licensed component, COLicCruiseCar, is housed in a different server,
LICSERVE.

Like DLLCLIEN, LICCLIEN.EXE creates its own COUtilityCruiseCar COM object,
which is constructed by reusing the licensed COLicCruiseCar COM object by
aggregation and augmenting it with a native IUtility interface. Because
the COLicCruiseCar COM object class is a licensed aggregatable component,
LICCLIEN illustrates nested aggregation involving a licensed component.

For functional descriptions and a tutorial code tour of LICCLIEN, see the
Code Tour section in LICCLIEN.HTM. For details on the external user
operation of LICCLIEN, see both the Usage and Operation sections in
LICCLIEN.HTM. To read LICCLIEN.HTM, run TUTORIAL.EXE in the main tutorial
directory and click the LICCLIEN lesson in the table of lessons. You can
also achieve the same thing by clicking the LICCLIEN.HTM file after
locating the main tutorial directory in the Windows Explorer. See also
LICSERVE.HTM in the main tutorial directory for more details on how
LICSERVE works and exposes its services to LICCLIEN. You must build the
LICSERVE DLL before building LICCLIEN. The makefile for LICSERVE
automatically registers that server in the system registry, so you must
build LICSERVE before attempting to run LICCLIEN.

For details on setting up your system to build and test the code samples
in this COM Tutorial series, see TUTORIAL.HTM. The supplied MAKEFILE is
Microsoft NMAKE-compatible. To create a debug build, issue the NMAKE
command in the Command Prompt window.

For convenient use in Microsoft's Visual Studio, a project file is
provided for each sample. To load the project for the LICCLIEN sample,
you can run Visual Studio at the Command Prompt in the sample's directory
as follows:

    MSDEV LICCLIEN.DSP

You can also simply double-click the .DSP file in the Windows Explorer to
load a sample's project into Visual Studio. From within Visual
Studio you can then browse the C++ classes of the sample source and
generally perform the other edit-compile-debug operations. Note that, as
part of the Platform SDK, the compilation of these samples from within
Visual Studio requires the proper setting of directory paths in
Visual Studio. For more details, see the Building the Code Samples
section in USING.HTM.

Usage
-----

LICCLIEN.EXE is an application that you can execute directly from Windows
in the normal manner or from the Command Prompt window. No command line
parameters are recognized by LICCLIEN.


FILES
=====

Files          Description

LICCLIEN.TXT   This file.
MAKEFILE       The generic makefile for building the code sample application
               of this tutorial lesson.
LICCLIEN.H     The include file for the LICCLIEN application. Contains
               class declarations, function prototypes, and resource
               identifiers.
LICCLIEN.CPP   The main implementation file for LICCLIEN.EXE. Has WinMain
               and CMainWindow implementation, as well as the main menu
               dispatching.
LICCLIEN.RC    The application resource definition file.
LICCLIEN.ICO   The application icon resource.
UTCRUCAR.H     The class declaration for the COUtilityCruiseCar COM object.
UTCRUCAR.CPP   Implementation file for the COUtilityCruiseCar COM object.
               Also has the definition of the CreateUtilityCruiseCar
               function.
LICCLIEN.DSP   Microsoft Visual Studio Project file.
