
APPUTIL - Application Utility Library


SUMMARY
=======

The APPUTIL library provides utility classes and functions that are
useful for making simple C++ Win32 Windows applications. APPUTIL is
provided as part of the Win32 COM Tutorial code samples.

For functional descriptions and a tutorial code tour of APPUTIL, see the
Code Tour section in APPUTIL.HTM. For details on setting up the
programmatic usage of APPUTIL, see the Usage section in APPUTIL.HTM. To
read APPUTIL.HTM, run TUTORIAL.EXE in the main tutorial directory and
click the APPUTIL lesson in the table of lessons. You can also achieve the
same thing by clicking the APPUTIL.HTM file after locating the main
tutorial directory in the Windows Explorer.

For details on setting up your system to build and test the code samples
in this COM Tutorial series, see TUTORIAL.HTM. The supplied MAKEFILE is
Microsoft NMAKE-compatible. To create a debug build, issue the NMAKE
command in the Command Prompt window.

For convenient use in Microsoft's Visual Studio, a project file is
provided for each sample. To load the project for the APPUTIL sample,
you can run Visual Studio at the Command Prompt in the sample's directory
as follows:

    MSDEV APPUTIL.DSP

You can also simply double-click the .DSP file in the Windows Explorer to
load a sample's project into Visual Studio. From within Visual
Studio you can then browse the C++ classes of the sample source and
generally perform the other edit-compile-debug operations. Note that, as
part of the Platform SDK, the compilation of these samples from within
Visual Studio requires the proper setting of directory paths in
Visual Studio. For more details, see the Building the Code Samples
section in USING.HTM.

Usage
-----

APPUTIL.LIB is meant to be statically linked to modules (.EXEs or .DLLs)
that use it. You include APPUTIL.H in the module that uses features of
APPUTIL.LIB. You must also include APPUTIL.LIB in the LINK command of
your application's makefile. For an example of the use of APPUTIL.LIB,
see the READTUT code sample.

Classes
-------

The classes provided are: CVirWindow, CVirDialog, CAboutBox, CDelayBox,
CMsgBox, CMsgLog, CSendLog, and CThreaded.

Functions
---------

The functions provided are: WindowProc, DialogProc, AnsiToUc, UcToAnsi,
DComOk, lRandom, CreateColorScalePalette, PaintWindow, SkipAnsi,
FileExist, MakeFamilyPath, GetExeName, CmdExec, DelayBox, ErrorBox,
GetErrorMsg, HrMsg, HrMsgId, ReadHelp, ReadTutorial, GoWeb, ReadSource,
GetErrorMsg, and OutputDebugFmt.

There are also a series of A_ ANSII versions of COM/OLE service helper
functions. The A_ functions are used in conjunction with a matching
series of macros in APPUTIL.H to permit compilation of the code samples
under both ANSII (default) and UNICODE. These macros and matching
A_ functions are for service calls that only accept Unicode string
parameters. For example, the standard StgIsStorageFile function
only accepts a Unicode string. When compiling a sample for ANSII
(ie, UNICODE is not defined), a macro substitutes any StgIsStorageFile
calls into A_StgIsStorageFile calls. A_StgIsStorageFile is implemented
here in APPUTIL. A_StgIsStorageFile takes the input ANSII string
that is passed and converts it into a Unicode string prior to making a
call to the actual StgIsStorageFile function.


FILES
=====

File          Description

APPUTIL.TXT   This file.
MAKEFILE      The generic Win32 makefile for this APPUTIL library.
APPUTIL.H     The include file for the APPUTIL library. Contains the
              class declarations and function prototypes.
APPUTIL.CPP   The main implementation file for APPUTIL.
APPUTIL.DSP   Microsoft Visual Studio Project file.
